<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize variables
hp = 50;
draw_set_font(fnt_one);

// Set this as the same size as the view
display_set_gui_size(1080, 768);

// Initialize variables
grav = 0.2;
hspd = 0;
vspd = 0;
jumpspeed = 7;
movespeed = 4;
jump = 0;
jumpmax = 10;

// Minimap values
xp = 850
yp = 20
height = 200
width = 200
xScale = width / room_width // How much to shrink
yScale = height / room_height // How much to shrink
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Control the player
scr_move();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw the health
draw_text(32,32,string(hp));
draw_sprite(spr_health_bar, 0, 32, 128);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw the minimap

// Half faded black background now, border later
draw_set_alpha(0.3);
draw_rectangle(xp, yp, xp + width, yp + height, false);

//draw player on minimap
draw_set_color(c_yellow);
draw_set_alpha(.80);
var playerCount;

// Player
playerCount = instance_number(obj_player);
for (k = 0; k &lt; playerCount; k = k + 1) {
    bossId = instance_find(obj_player, k);
    var whereX = xp + bossId.x * (xScale);
    var whereY = yp + bossId.y * (yScale);
    draw_circle(whereX, whereY, 2, false);
}

// Draw all wall units
// warning! can be inefficient - using surfaces or pre-made sprite
// is better for room maps!
draw_set_color(c_gray);
draw_set_alpha(.80);
var wallCount;
wallCount = instance_number(obj_cave_ground);
for (k = 0; k &lt; wallCount; k = k + 1) {
    wallId = instance_find(obj_cave_ground, k);
    var whereX = xp + wallId.x * (xScale);
    var whereY = yp + wallId.y * (yScale);
    draw_rectangle(whereX + 6, whereY + 9, whereX + 5, whereY + 5, false);
}

//draw player on minimap
draw_set_color(c_red);
draw_set_alpha(.80);
var bossCount;
bossCount = instance_number(obj_boss_1);
for (k = 0; k &lt; bossCount; k = k + 1) {
    bossId_1 = instance_find(obj_boss_1, k);
    var whereX = xp + bossId_1.x * (xScale);
    var whereY = yp + bossId_1.y * (yScale);
    draw_circle(whereX, whereY, 2, false);
}

// Solid outer border drawn last so it is on top
draw_set_color(c_black);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
